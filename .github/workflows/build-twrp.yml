name: Build TWRP (a3core)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show environment
        run: |
          echo "=== Disk ==="
          df -h
          echo "=== Memory ==="
          free -h
          echo "=== Cores ==="
          nproc

      - name: Free up space (pre-sync)
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/share/boost || true
          sudo apt-get clean || true
          df -h

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev \
            gcc-multilib g++-multilib libc6-dev-i386 libncurses5-dev libx11-dev libz-dev ccache \
            libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig python-is-python3

      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl -sS https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "PATH=~/bin:$PATH" >> $GITHUB_ENV

      - name: Init TWRP manifest (twrp-11)
        run: |
          mkdir -p ~/twrp
          cd ~/twrp
          repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-11 --depth=1

      - name: Add local manifest (remove big prebuilts + add your forks)
        run: |
          mkdir -p ~/twrp/.repo/local_manifests
          printf '<?xml version="1.0" encoding="UTF-8"?>\n<manifest>\n' > ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <!-- Remove very large prebuilts that cause "No space left" -->\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <remove-project name="platform/prebuilts/rust" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <remove-project name="platform/prebuilts/clang" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <remove-project name="platform/prebuilts/gcc" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '\n  <!-- Your device/kernel/vendor forks (use twrp-11 branch) -->\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <project name="GokuBlack557/twrp_device_samsung_a3core" path="device/samsung/a3core" remote="github" revision="twrp-11" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <project name="GokuBlack557/kernel_samsung_a3core" path="kernel/samsung/a3core" remote="github" revision="twrp-11" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '  <project name="GokuBlack557/vendor_samsung_a3core" path="vendor/samsung/a3core" remote="github" revision="twrp-11" />\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          printf '</manifest>\n' >> ~/twrp/.repo/local_manifests/a3core.xml
          echo "Wrote local manifest:"
          cat ~/twrp/.repo/local_manifests/a3core.xml

      - name: Pre-sync environment check
        run: |
          echo "=== Pre-sync disk ==="
          df -h
          echo "=== Pre-sync memory ==="
          free -h

      - name: Sync sources (optimized)
        run: |
          cd ~/twrp
          repo sync -c --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync --current-branch -j$(nproc)

      - name: Setup build env & lunch
        run: |
          cd ~/twrp
          export ALLOW_MISSING_DEPENDENCIES=true
          export LC_ALL=C
          . build/envsetup.sh
          lunch omni_a3core-eng

      - name: Build recovery
        run: |
          cd ~/twrp
          mka recoveryimage -j$(nproc)

      - name: Package recovery (zip)
        run: |
          mkdir -p ~/twrp/artifacts
          RECOVERY_IMG=$(ls -1 ~/twrp/out/target/product/*/recovery.img | head -n1 || true)
          if [ -z "$RECOVERY_IMG" ]; then
            echo "No recovery.img found"
            exit 1
          fi
          cp "$RECOVERY_IMG" ~/twrp/artifacts/recovery.img
          cd ~/twrp/artifacts
          zip -r recovery.zip recovery.img

      - name: Upload artifact (v4)
        uses: actions/upload-artifact@v4
        with:
          name: twrp-a3core-recovery
          path: ~/twrp/artifacts/recovery.zip

      - name: Cleanup
        run: |
          echo "Cleaning up to free space"
          rm -rf ~/twrp/out ~/twrp/.repo/projects/* || true
          df -h
